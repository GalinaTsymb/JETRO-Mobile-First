@mixin break($point) {
  @if $point == min375 {
    @media  only screen and (min-width: 375px) { @content; }
  }
  @else if $point == min420 {
    @media  only screen and (min-width: 420px) { @content; }
  }
  @else if $point == min640 {
    @media  only screen and (min-width: 640px) { @content; }
  }
  @else if $point == min768 {
    @media  only screen and (min-width: 768px) { @content; }
  }
  @else if $point == min1024 {
    @media  only screen and (min-width: 1024px) { @content; }
  }

}

/*
 * A mixin targeting a specific device width and larger.
 * These are the available targets: 'xs', 'sm', 'md', 'lg', 'xl'
 *
 * @param {string} $media The target media
 */
@mixin respond-from($media) {
  @if $media == xs {
    @media (min-width: 0px)  { @content; }
  } @else if $media == sm {
    @media (min-width: 768px) { @content; }
  } @else if $media == md {
    @media (min-width: 1200px) { @content; }
  } @else if $media == lg {
    @media (min-width: 1450px) { @content; }
  } @else if $media == xl {
    @media (min-width: 1800px) { @content; }
  }
}

/*
 * Generates classes for a grid of columns, prefixed by size.
 * The result will be .col-[size]-[col]-[total-columns] E.g. .col-xs-6-12
 *
 * @param {string}	$size			The name of the size target (e.g. xs, sm, md, lg, xl, etc.)
 * @param {int}		$grid-columns	Amount of columns
 */
@mixin grid-generator($size, $grid-columns) {
  @include break(min768){
    @for $i from 1 through $grid-columns {
      .col-#{$size}-#{$i}-#{$grid-columns} {
        width: percentage($i / $grid-columns);
        float: left;
        padding-left: 10px;
        padding-right: 10px;
      }
    }
  }

}



// Generating grid
@include grid-generator(xs, 12);

@include respond-from(sm) {
  @include grid-generator(sm, 12);
}

@include respond-from(md) {
  @include grid-generator(md, 12);
}

@include respond-from(lg) {
  @include grid-generator(lg, 12);
}

@include respond-from(xl) {
  @include grid-generator(xl, 12);
}

// width, height
@mixin Width-Height($width, $height){
  width: $width;
  height: $height;
}
